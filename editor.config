# Apply these rules to all files in the project
root = true

# General formatting rules for all file types
[*]
charset = utf-8                       # Use UTF-8 encoding for all files
end_of_line = lf                      # Use LF (Line Feed) for line endings (Unix-style)
insert_final_newline = true           # Ensure a newline at the end of each file
trim_trailing_whitespace = true       # Remove trailing whitespace at the end of lines

# Specific settings for C# files
[*.cs]
indent_style = space                  # Use spaces instead of tabs for indentation
indent_size = 4                       # Set indentation size to 4 spaces
dotnet_sort_system_directives_first = true  # Place 'using System.*' directives first
csharp_new_line_before_open_brace = all     # Place opening braces on a new line
csharp_indent_case_contents = true          # Indent case contents in switch statements
csharp_indent_switch_labels = true          # Indent labels in switch statements
csharp_indent_block_contents = true         # Indent block contents (e.g., inside methods)
csharp_space_after_keywords_in_control_flow_statements = true  # Add space after control flow keywords (e.g., if, while)
csharp_space_between_method_declaration_parameter_list_parentheses = false  # No space between method declaration parentheses
csharp_space_between_method_call_parameter_list_parentheses = false         # No space between method call parentheses

# Formatting rules for using directives
dotnet_separate_import_directive_groups = true  # Separate using directives into groups

# Modifier ordering preferences in C#
dotnet_sort_access_modifiers = true             # Sort access modifiers consistently (e.g., public, private)

# Code style: Preferences for variable declarations (var vs explicit types)
dotnet_style_require_accessibility_modifiers = always         # Always require accessibility modifiers (e.g., public, private)
dotnet_style_prefer_var_for_built_in_types = true:suggestion  # Prefer 'var' for built-in types (e.g., int, string)
dotnet_style_prefer_var_when_type_is_apparent = true:suggestion  # Prefer 'var' when the type is obvious from the context
dotnet_style_prefer_var_elsewhere = false:suggestion          # Use explicit types elsewhere

# Code style: Preferences for braces and spacing
csharp_space_around_binary_operators = before_and_after       # Add spaces around binary operators (e.g., +, -, ==)
csharp_space_after_cast = false                               # Do not add space after type casts

# Code style: Preferences for null checks and pattern matching
dotnet_style_null_propagation = true:suggestion               # Prefer null propagation operator (?.) over explicit null checks
dotnet_style_pattern_matching_over_as_with_null_check = true:suggestion  # Prefer pattern matching over 'as' with null checks

# Code style: Preferences for properties and fields
dotnet_style_prefer_auto_properties = true:suggestion         # Prefer auto-implemented properties when possible
dotnet_style_prefer_expression_bodied_methods = when_possible:suggestion  # Use expression-bodied methods when possible
dotnet_style_prefer_expression_bodied_properties = when_possible:suggestion  # Use expression-bodied properties when possible

# Code style: Preferences for inferred names in tuples and anonymous types
dotnet_style_prefer_inferred_tuple_names = true:suggestion    # Prefer inferred tuple element names (e.g., var t = (a, b))
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion  # Prefer inferred member names in anonymous types

# Code style: Placement of using directives (inside or outside namespace)
csharp_using_directive_placement = outside_namespace          # Place using directives outside the namespace declaration